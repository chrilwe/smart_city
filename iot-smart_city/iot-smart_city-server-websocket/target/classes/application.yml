server:
  port: 40008
spring:
  application:
    name: iot-smart-city-server-websocket
  redis:
    host: 127.0.0.1
    port: 6379
    timeout: 5000 #连接超时 毫秒
    jedis:
      pool:
        maxActive: 3
        maxIdle: 3
        minIdle: 1
        maxWait: -1 #连接池最大等行时间 -1没有限制
  
eureka:
  client:
    registerWithEureka: true #服务注册开关
    fetchRegistry: true #服务发现开关
    serviceUrl: #Eureka客户端与Eureka服务端进行交互的地址，多个中间用逗号分隔
      defaultZone: http://localhost:8889/eureka/
  instance:
    prefer-ip-address:  true  #将自己的ip地址注册到Eureka服务中
    ip-address: ${IP_ADDRESS:127.0.0.1}
    instance-id: iot-smart-city-server-websocket #指定实例id
ribbon:
  MaxAutoRetries: 2 #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试，如果eureka中找不到服务则直接走断路器
  MaxAutoRetriesNextServer: 3 #切换实例的重试次数
  OkToRetryOnAllOperations: false  #对所有操作请求都进行重试，如果是get则可以，如果是post，put等操作没有实现幂等的情况下是很危险的,所以设置为false
  ConnectTimeout: 5000  #请求连接的超时时间
  ReadTimeout: 6000 #请求处理的超时时间
  
websocket: 
  server_port: 1314   #当前服务器监听端口号
  server_host: 127.0.0.1   #当前服务器地址
  poolSize: 10      
  webSocketPath: /ws
  contentLength: 8192   #请求内容长度
  SO_KEEPALIVE: true
  servers: 127.0.0.1:1315    #其他服务器的地址
  
encrypt:
  key-store: 
    rsaFileName: xc.keystore
    secret: xuechengkeystore
    alias: xckey
    password: xuecheng



